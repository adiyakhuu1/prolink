generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id             String           @id @unique @default(nanoid())
  email          String           @unique
  firstName      String
  lastName       String
  birthday       DateTime
  role           String
  companyName    String
  phoneNumber    String           @unique
  password       String
  salary         Int              @default(10000)
  salaryType     String           @default("HOUR")
  pfp            String
  about          String?
  profileViews   Int              @default(0)
  featuredSkills featuredSkills[]
  reviewee       review[]         @relation("reviewee_")
  reviewer       review[]         @relation("reviewer_")
  skill          skill[]          @relation("skillTouser")
}

model otp {
  id    String @id @default(nanoid())
  otp   Int    @unique
  email String
}

model skill {
  id             String           @id @default(nanoid())
  name           String           @unique
  featuredSkills featuredSkills[]
  user           user[]           @relation("skillTouser")
}

model featuredSkills {
  id        String    @id @default(nanoid())
  userId    String
  skillId   String
  detail    String
  endedAt   DateTime?
  present   Boolean   @default(false)
  startedAt DateTime
  skill     skill     @relation(fields: [skillId], references: [id])
  user      user      @relation(fields: [userId], references: [id])
}

model review {
  id         String @id @default(nanoid())
  rating     Int
  reviewerId String
  revieweeId String
  message    String
  reviewee   user   @relation("reviewee_", fields: [revieweeId], references: [id])
  reviewer   user   @relation("reviewer_", fields: [reviewerId], references: [id])
}
